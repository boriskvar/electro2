<?php

namespace App\Http\Controllers\Auth;

use App\Models\User;
use App\Models\Product;

use App\Models\Wishlist;
use Illuminate\View\View;

use App\Models\Comparison;
use Illuminate\Http\Request;
use Illuminate\Validation\Rules;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Http\RedirectResponse;
use Illuminate\Auth\Events\Registered;

class RegisteredUserController extends Controller
{
    /**
     * Display the registration view.
     */
    public function create(): View
    {
        return view('auth.register');
    }

    /**
     * Handle an incoming registration request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        // dd($request->all());
        //? 1. üîê –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º—É:
        $request->validate([
            'name' => ['required', 'string', 'max:255'],
            'email' => ['required', 'string', 'lowercase', 'email', 'max:255', 'unique:' . User::class],
            'password' => ['required', 'confirmed', Rules\Password::defaults()],
        ]);

        //? 2. üë§ –°–æ–∑–¥–∞—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
        $user = User::create([
            'name' => $request->name,
            'email' => $request->email,
            'password' => Hash::make($request->password),
        ]);

        //? 3. üì£ –¢—Ä–∏–≥–≥–µ—Ä–∏—Ç —Å–æ–±—ã—Ç–∏–µ Registered:
        event(new Registered($user));

        //? 4. üîë –õ–æ–≥–∏–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:
        Auth::login($user);

        //? ‚úÖ –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω wishlist_product_id:
        // === –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω —Ç–æ–≤–∞—Ä –¥–ª—è Wishlist (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ Wishlist:) ===
        if ($request->has('wishlist_product_id')) {
            $productId = $request->input('wishlist_product_id');

            $exists = Wishlist::where('user_id', $user->id)
                ->where('product_id', $productId)
                ->exists();

            if (!$exists) {
                Wishlist::create([
                    'user_id' => $user->id,
                    'product_id' => $productId,
                ]);
            }

            return redirect()->route('products.show', $productId ?? null)
                ->with('success', $productId ? '–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ Wishlist!' : '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
        }

        // === –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω —Ç–æ–≤–∞—Ä –¥–ª—è Compare ===
        if ($request->has('compare_product_id')) {
            $productId = $request->input('compare_product_id');

            // –ù–∞—Ö–æ–¥–∏–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–µ
            $comparison = Comparison::firstOrCreate([
                'user_id' => $user->id,
            ]);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–∫–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            $exists = $comparison->products()
                ->where('product_id', $productId)
                ->exists();

            if (!$exists) {
                $comparison->products()->attach($productId);
            }

            return redirect()->route('products.show', $productId ?? null)
                ->with('success', $productId ? '–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ Compare!' : '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
        }

        //? ‚úÖ –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ ‚Äî –æ–±—ã—á–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç:
        return redirect()->route('dashboard');  // –∏–ª–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é: route('/')
    }
}
